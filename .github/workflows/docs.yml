name: Build and Deploy

on:
  push:
    branches:
      - main
      - workflow
  pull_request:
    branches:
      - main
      - workglow

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

      - name: Download GSON JAR
        run: |
          mkdir -p vendor
          curl -L -o vendor/gson-2.10.1.jar https://repo1.maven.org/maven2/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar

      - name: Compile Java module
        run: |
          mkdir -p mods/kentekencheck
          find . -name "*.java" > sources.txt
          javac -d mods/kentekencheck \
            --module-path vendor/gson-2.10.1.jar \
            --add-modules com.google.gson \
            --add-reads kentekencheck=ALL-UNNAMED \
            @sources.txt

      - name: Create JAR
        run: |
          jar --create --file=build/output.jar --module-version=1.0 -C mods/kentekencheck .

      - name: Run jpackage
        run: |
          cd build
          jpackage @pack-linux-deb.jpack

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-package
          path: build/kentekencheck_1.0-1_amd64.deb

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' # or 21

      - name: Install WiX Toolset (required for jpackage on Windows)
        run: |
          choco install wixtoolset -y

      - name: Download gson jar
        run: |
          curl -L -o vendor\gson-2.10.1.jar https://repo1.maven.org/maven2/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar

      - name: Compile Java module
        run: |
          mkdir mods\kentekencheck
          javac -d mods/kentekencheck --module-path "vendor\gson-2.10.1.jar" --add-modules com.google.gson --add-reads kentekencheck=ALL-UNNAMED (Get-ChildItem -Recurse -Filter *.java).FullName

      - name: Create JAR
        run: |
          jar --create --file=build/output.jar --module-version=1.0 -C mods/kentekencheck .

      - name: Run jpackage
        shell: cmd
        run: |
          cd build
          jpackage @pack-windows.jpack
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: build/kentekencheck-1.0.exe

  create-prerelease:
    if: github.event_name == 'push' && github.ref == 'refs/heads/workflow'
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-package
          
      - name: Download Linix Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-package
          
      - name: Create Pre-release
        id: create_prerelease
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          automatic_release_tag: "latest-beta"
          prerelease: true
          title: "Beta Build"
          files: |
            kentekencheck-1.0.exe
            kentekencheck_1.0-1_amd64.deb
            
  create-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-package
          
      - name: Download Linix Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-package
          
      - name: Create Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          automatic_release_tag: "latest"
          prerelease: false
          title: "Release"
          files: |
            kentekencheck-1.0.exe
            kentekencheck_1.0-1_amd64.deb